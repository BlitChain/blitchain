syntax = "proto3";

package blit.script;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "blit/script/params.proto";
import "blit/script/script.proto";

option go_package = "blit/x/script/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateScript (MsgCreateScript) returns (MsgCreateScriptResponse);
  rpc UpdateScript (MsgUpdateScript) returns (MsgUpdateScriptResponse);
  rpc Run          (MsgRun         ) returns (MsgRunResponse         );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                     "authority";
  option           (amino.name) = "blit/x/script/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateScript {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string code    = 2;
  
  // The list of MsgUrls the create will be granted access to via authz initially
  repeated string msg_type_permissions = 3;
           string grantee              = 4;
}



message MsgCreateScriptResponse {
    string address = 1;
}

message MsgUpdateScript {
  option (cosmos.msg.v1.signer) = "grantee";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string code    = 2;
  string grantee = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgUpdateScriptResponse {
  int64 version = 1;
}

message MsgDeleteScript {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1;
  string index   = 2;
}

message MsgDeleteScriptResponse {}

// MsgRun runs a script at a specific address
message MsgRun {
  option (cosmos.msg.v1.signer) = "grantee";
  string caller_address = 2;
  string script_address = 3;
  string extra_code     = 4;
  string function_name  = 5;
  string kwargs        = 6;
  string grantee       = 7;
  string attached_messages = 1;
}

message MsgRunResponse {
  string response = 1;
}

