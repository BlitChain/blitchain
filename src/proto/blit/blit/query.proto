syntax = "proto3";

package blit.blit;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "blit/blit/params.proto";
import "blit/blit/task.proto";
import "blit/blit/future_task.proto";

option go_package = "blit/x/blit/types";


// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blit/blit/params";
  
  }
  
  // Queries a list of Task items.
  rpc Task    (QueryGetTaskRequest) returns (QueryGetTaskResponse) {
    option (google.api.http).get = "/blit/blit/task";
  
  }
  rpc TaskAll (QueryAllTaskRequest) returns (QueryAllTaskResponse) {
    option (google.api.http).get = "/blit/blit/all-tasks";
  
  }
  
  // Queries a list of FutureTask items.
  rpc FutureTask    (QueryGetFutureTaskRequest) returns (QueryGetFutureTaskResponse) {
    option (google.api.http).get = "/blit/blit/future-task";
  
  }
  rpc FutureTaskAll (QueryAllFutureTaskRequest) returns (QueryAllFutureTaskResponse) {
    option (google.api.http).get = "/blit/blit/all-future-tasks";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTaskRequest {
  uint64 id = 1;
}

message QueryGetTaskResponse {
  Task task = 1 [(gogoproto.nullable) = false];
}

message QueryAllTaskRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllTaskResponse {
  repeated Task                                   task       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetFutureTaskRequest {
  string index = 1;
}

message QueryGetFutureTaskResponse {
  FutureTask futureTask = 1 [(gogoproto.nullable) = false];
}

message QueryAllFutureTaskRequest {
  // Prefix queries the future tasks with indexs with the given prefix.
  string prefix = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllFutureTaskResponse {
  repeated FutureTask                             futureTask = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

