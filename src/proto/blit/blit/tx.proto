syntax = "proto3";

package blit.blit;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "blit/blit/params.proto";
import "blit/blit/task.proto";

option go_package = "blit/x/blit/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams       (MsgUpdateParams      ) returns (MsgUpdateParamsResponse      );
  rpc MintCoins          (MsgMintCoins         ) returns (MsgMintCoinsResponse         );
  rpc BurnCoins          (MsgBurnCoins         ) returns (MsgBurnCoinsResponse         );
  rpc ForceTransferCoins (MsgForceTransferCoins) returns (MsgForceTransferCoinsResponse);
  rpc SetDenomMetadata   (MsgSetDenomMetadata  ) returns (MsgSetDenomMetadataResponse  );
  rpc CreateTask         (MsgCreateTask        ) returns (MsgCreateTaskResponse        );
  rpc UpdateTask         (MsgUpdateTask        ) returns (MsgUpdateTaskResponse        );
  rpc DeleteTask         (MsgDeleteTask        ) returns (MsgDeleteTaskResponse        );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                   "authority";
  option           (amino.name) = "blit/x/blit/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgMintCoins {
  option (cosmos.msg.v1.signer) = "grantee";
  cosmos.base.v1beta1.Coin amount  = 1 [(gogoproto.nullable)  = false                 , (amino.dont_omitempty) = true];
  string                   grantee = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"] ;
}

message MsgMintCoinsResponse {}

message MsgBurnCoins {
  option (cosmos.msg.v1.signer) = "grantee";
  cosmos.base.v1beta1.Coin amount  = 1 [(gogoproto.nullable)  = false                 , (amino.dont_omitempty) = true];
  string                   grantee = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"] ;
}

message MsgBurnCoinsResponse {}

message MsgForceTransferCoins {
  option (cosmos.msg.v1.signer) = "grantee";
  cosmos.base.v1beta1.Coin amount       = 1 [(gogoproto.nullable)  = false                 , (amino.dont_omitempty) = true];
  string                   from_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"] ;
  string                   to_address   = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"] ;
  string                   grantee      = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"] ;
}

message MsgForceTransferCoinsResponse {}

message MsgSetDenomMetadata {
  option (cosmos.msg.v1.signer) = "authority";
  string authority   = 1;
  string base        = 2;
  string display     = 3;
  string name        = 4;
  string symbol      = 5;
  string uri         = 6;
  string uri_hash    = 7;
  uint32 exponent    = 8;
  string description = 9;
}

message MsgSetDenomMetadataResponse {}

message MsgCreateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator             =  1;
  string index               =  2;
  int32  taskId              =  3;
  int32  totalRunCount       =  4;
  string nextTaskResultIndex =  5;
  string activateOn          =  6;
  string expireOn            =  7;
  string interval            =  8;
  int32  maxRuns             =  9;
  bool   disableOnError      = 10;
  bool   enabled             = 11;
  int32  gasLimit            = 12;
  string gasPrice            = 13;
  string messagesMo          = 14;
  string dule                = 15;
  string blit                = 16;
}

message MsgCreateTaskResponse {}

message MsgUpdateTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator             =  1;
  string index               =  2;
  int32  taskId              =  3;
  int32  totalRunCount       =  4;
  string nextTaskResultIndex =  5;
  string activateOn          =  6;
  string expireOn            =  7;
  string interval            =  8;
  int32  maxRuns             =  9;
  bool   disableOnError      = 10;
  bool   enabled             = 11;
  int32  gasLimit            = 12;
  string gasPrice            = 13;
  string messagesMo          = 14;
  string dule                = 15;
  string blit                = 16;
}

message MsgUpdateTaskResponse {}

message MsgDeleteTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string index   = 2;
}

message MsgDeleteTaskResponse {}

