syntax = "proto3";

package blit.storage;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "blit/storage/params.proto";
import "blit/storage/storage.proto";

option go_package = "blit/x/storage/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  
  // Since: cosmos-sdk 0.47
  rpc UpdateParams  (MsgUpdateParams ) returns (MsgUpdateParamsResponse );
  rpc CreateStorage (MsgCreateStorage) returns (MsgCreateStorageResponse);
  rpc UpdateStorage (MsgUpdateStorage) returns (MsgUpdateStorageResponse);
  rpc DeleteStorage (MsgDeleteStorage) returns (MsgDeleteStorageResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                      "authority";
  option           (amino.name) = "blit/x/storage/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

message MsgCreateStorage {
  string address = 1;
  string index   = 2;
  string data    = 3;
  string grantee = 4;
}

message MsgCreateStorageResponse {}

message MsgUpdateStorage {
  string address = 1;
  string index   = 2;
  string data    = 3;
  string grantee = 4;
}

message MsgUpdateStorageResponse {}

message MsgDeleteStorage {
  string address = 1;
  string index   = 2;
  string grantee = 3;
}

message MsgDeleteStorageResponse {}

